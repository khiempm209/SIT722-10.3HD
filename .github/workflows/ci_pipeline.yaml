name: CI pipeline - Test, Build and Push Backend/frontend Images to ACR

on:
  workflow_dispatch:

  push:
    branches:
      - testing
    paths: 
      - 'frontend/**'
      - 'chatbot/**'
      - '.github/workflows/ci_pipeline.yml' 

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}

jobs:
  sonar-qube-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 
        with:
            fetch_depth: 0

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          # scanMetadataReportFile: target/sonar/report-task.txt
          pollingTimeoutSec: 600
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      
      - name: "SonarQube Quality Gate Status value"
        run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

  # # Job 2: Build and Push Docker Images (runs only if tests pass)
  # build_and_push_images:
  #   runs-on: ubuntu-latest
  #   needs: test_and_lint_backends

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4

  #   # Azure login using a Service Principal secret
  #   - name: Azure Login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}

  #   # Login to Azure Container Registry (ACR)
  #   - name: Login to Azure Container Registry
  #     run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

  #   # Build and Push Docker image for Product Service
  #   - name: Build and Push Product Service Image
  #     run: |
  #       docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_product_service:latest ./backend/product_service/
  #       docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_product_service:latest

  #   # Build and Push Docker image for Order Service
  #   - name: Build and Push Order Service Image
  #     run: |
  #       docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_order_service:latest ./backend/order_service/
  #       docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_order_service:latest
    
  #   # Build and Push Docker image for Customer Service
  #   - name: Build and Push Customer Service Image
  #     run: |
  #       docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_customer_service:latest ./backend/customer_service/
  #       docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/week10_customer_service:latest

  #   # Logout from Azure for security (runs even if image push fails)
  #   - name: Logout from Azure
  #     run: az logout
  #     if: always()
